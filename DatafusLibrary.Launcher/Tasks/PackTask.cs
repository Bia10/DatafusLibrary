using System.IO.Compression;
using Cake.Common.Diagnostics;
using Cake.Common.IO;
using Cake.Frosting;

namespace DatafusLibrary.Launcher.Tasks;

[TaskName("Pack")]
[IsDependentOn(typeof(TestTask))]
public sealed class PackTask : AsyncFrostingTask<LaunchContext>
{
    public override Task RunAsync(LaunchContext context)
    {
        context.Information("Packing started...");

        var testProjectOutputPath = context.LocalPathProvider.TestProjectOutputPath;
        var datafusReleaseDownloadPath = context.LocalPathProvider.DatafusReleaseDownloadPath;
        var autogenerated = datafusReleaseDownloadPath + (OperatingSystem.IsLinux()
            ? "/data/entities_json/autogenerated/"
            : "\\data\\entities_json\\autogenerated\\");

        var tempDir = Directory.CreateTempSubdirectory();

        context.CopyDirectory(autogenerated, tempDir.FullName);

        if (context.FileExists(testProjectOutputPath + "_release.zip"))
            context.DeleteFile(testProjectOutputPath + "_release.zip");

        try
        {
            ZipFile.CreateFromDirectory(tempDir.FullName, testProjectOutputPath + "_release.zip");
        }
        catch (Exception ex)
        {
            context.Error(ex);
            throw;
        }

        context.Information("Packing finished...");

        return Task.CompletedTask;
    }
}